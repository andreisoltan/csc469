#!/bin/bash

# Can use taskset to bind process to single CPU (the one that we measure).
# In order to run foo on cpu0:
#       taskset -c 0 foo

# Finding clock speeds:
# We can get a list of the clock speeds of each processor on this system with
# the following command:
#       sed -n 's/cpu MHz[^:]*: //p' </proc/cpuinfo
# The nth line of output corresponds to the clock of processor #(n-1)

# We'll run on the specified CPU, having frequency $FREQ
CPU=0;
FREQ=`sed -n 's/cpu MHz[^:]*: //p' </proc/cpuinfo | sed -n "$((CPU+1)) s/\(.\)/\1/p"`;

LOGCONTAINER=log
LOGPREFIX=parta
LOGDIR=$LOGPREFIX.`uname -n`.$$
mkdir -p $LOGCONTAINER/$LOGDIR

pushd $LOGCONTAINER
  rm -f $LOGPREFIX.latest # old symlink
  ln -s $LOGDIR $LOGPREFIX.latest # new symlink
popd

echo "Capturing platform data..."
./platform-info.sh > $LOGCONTAINER/$LOGDIR/platform-info.log

echo "Inactive periods (on CPU $CPU @ $FREQ MHz)..."
taskset -c $CPU \
    ./parta \
        -f $FREQ \
        -t 500 -n 1000 > $LOGCONTAINER/$LOGDIR/inactive_periods.log

# Check frequency again, for paranoia's sake
FREQ=`sed -n 's/cpu MHz[^:]*: //p' </proc/cpuinfo | sed -n "$((CPU+1)) s/\(.\)/\1/p"`;

echo "Context switching (on CPU $CPU @ $FREQ MHz)..."
taskset -c $CPU \
    ./parta \
        -c \
        -f $FREQ \
        -t 500 -n 1000 > $LOGCONTAINER/$LOGDIR/context_switch.log

# TODO: Complete the shell script to:
#           - run the experiment & get data (should we do the average of multiple
#            runs or something?)           
# 			- run gnuplot (or replacement)
# 			- display the resulting graph (?)
